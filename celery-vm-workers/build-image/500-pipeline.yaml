#Note: Pipeline requires a large amount of On Node Ephemeral storage to be able to run the virt-customize and buildah tasks.
apiVersion: tekton.dev/v1beta1
kind: Pipeline
metadata:
  name: celery-custom-build
  namespace: celery-workers 
spec:
  params:
    - description: The OpenShift object to check for
      name: OBJECT_NAME
      type: string
    - description: The Object Type to check for
      name: OBJECT_TYPE
      type: string
    - description: The PVC that virt-customize will act on
      name: PVC
      type: string
    - description: OUTPUT ContainerDisk IMAGE
      name: IMAGE
      type: string
    - description: GIT Url to clone
      name: url
      type: string
    - description: GIT Repo Name
      name: REPO_NAME
      type: string
  tasks:
    - name: oc-wait-until-object-deleted
      params:
        - name: OBJECT_NAME
          value: $(params.OBJECT_NAME)
        - name: OBJECT_TYPE
          value: $(params.OBJECT_TYPE)
        - name: SLEEP_TIMER
          value: '5'
        - name: VERSION
          value: '4.12'
      taskRef:
        kind: Task
        name: oc-wait-until-object-deleted
    - name: git-clone-repository
      workspaces:
        - name: output
          workspace: output
      params:
        - name: url
          value: $(params.url)
      taskRef:
        kind: ClusterTask
        name: git-clone
      runAfter:
        - oc-wait-until-object-deleted
    - name: disk-virt-customize
      workspaces:
        - name: data01
          workspace: data01
        - name: data02
          workspace: data02
        - name: output
          workspace: output
      params:
        - name: pvc
          value: $(params.PVC)
        - name: repo_name
          value: $(params.REPO_NAME)
        - name: customizeCommands
          value: |
            update
            install git,python3,python3-pip,gcc
            run-command dnf groupinstall -y "Development Tools"
            run-command pip3 install wheel
            mkdir /$(params.REPO_NAME)
            copy-in /output:/$(params.REPO_NAME)
            run-command pip3 install -r /$(params.REPO_NAME)/output/flask-server-app/requirements.txt
            firstboot /output/celery-vm-workers/build-image/celery-entrypoint-script.sh
            delete /var/cache/dnf
        - name: verbose
          value: 'false'
        - name: additionalOptions
          value: ''
      runAfter:
        - git-clone-repository
      taskRef:
        kind: Task
        name: disk-virt-customize
    - name: build-containerdisk
      workspaces:
        - name: source
          workspace: source
      params:
        - name: pvc
          value: $(params.PVC)
        - name: IMAGE
          value: $(params.IMAGE)        
      taskRef:
        kind: Task
        name: buildah-containerdisk-as-user
      runAfter:
        - disk-virt-customize
  workspaces:
    - name: data01 
    - name: data02
    - name: source
    - name: output
    

