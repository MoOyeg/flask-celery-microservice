---

apiVersion: tekton.dev/v1beta1

kind: Task

metadata:

  name: oc-wait-until-object-deleted
  namespace: celery-workers

  labels:

    app.kubernetes.io/version: "0.2"

  annotations:

    tekton.dev/categories: Openshift

    tekton.dev/pipelines.minVersion: "0.17.0"

    tekton.dev/tags: cli

    tekton.dev/displayName: "openshift client"

    tekton.dev/platforms: "linux/amd64"

spec:

  description: >-

    Task continues to check for an OC object until it is deleted

  params:

    - name: OBJECT_NAME

      description: The OpenShift object to check for

      type: string

    - name: OBJECT_TYPE

      description: The Object Type to check for
      type: string

    - name: TOTAL_WAIT_TIME

      description: The total time to wait for the object to be provisioned and deleted in seconds

      type: string

      default: "300"
    
    - name: EXIT_ON_TIMEOUT

      description: If set to true, the task will exit if the timeout is reached

      type: string

      default: "false"

    - name: DELETE_OBJECT_ON_TIMEOUT

      description: If set to true, the task will delete the object if the timeout is reached

      type: string

      default: "false"

    - name: SLEEP_TIMER
      
      description: The time to sleep between checks
  
      type: string
  
      default: "10"

    - name: VERSION

      description: The OpenShift Version to use

      type: string

      default: "4.12"

  steps:

    - name: oc

      image: quay.io/openshift/origin-cli:$(params.VERSION)
      script: |
        echo "Will wait for $(params.TOTAL_WAIT_TIME) seconds for $(params.OBJECT_TYPE) $(params.OBJECT_NAME) to be provisioned/deleted"
        end=$((SECONDS+$(params.TOTAL_WAIT_TIME)))
        
        until oc get $(params.OBJECT_TYPE) $(params.OBJECT_NAME);do
          echo -e "Waiting $((end-SECONDS)) more seconds for $(params.OBJECT_TYPE) $(params.OBJECT_NAME) to be provisioned\n"
          sleep $(params.SLEEP_TIMER)
        done

        while oc get $(params.OBJECT_TYPE) $(params.OBJECT_NAME);do    
          echo -e "Waiting $((end-SECONDS)) more seconds for $(params.OBJECT_TYPE) $(params.OBJECT_NAME) import to complete and datavolume provisioned/deleted\n"
          sleep $(params.SLEEP_TIMER)
      
          if [ $((end-SECONDS)) -le 0 ]; then
            echo "Timed out waiting for $(params.OBJECT_TYPE) $(params.OBJECT_NAME) to be provisioned/deleted"
            if [ "$(params.DELETE_OBJECT_ON_TIMEOUT)" == "true" ]; then
              oc delete $(params.OBJECT_TYPE) $(params.OBJECT_NAME) && echo "Deleted $(params.OBJECT_TYPE) $(params.OBJECT_NAME)" || echo "Failed to delete $(params.OBJECT_TYPE) $(params.OBJECT_NAME)"
            fi
            
            if [ "$(params.EXIT_ON_TIMEOUT)" == "true" ]; then
              exit 1
            fi
            break
          fi
        done
        
